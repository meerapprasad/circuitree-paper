services:
  - type: worker
    name: queue
    region: ohio
    env: python
    buildCommand: "poetry update && poetry install"
    startCommand: "cd oscillation && poetry run celery --app oscillation_parallel_celery.app worker -P processes --loglevel info"
    autoDeploy: false
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: circuitree-distributed
          type: redis
          property: connectionString
      - key: POETRY_VERSION
        value: "1.6.1"
      - key: PYTHON_VERSION
        value: "3.10.7"
  - type: web
    name: app
    region: ohio
    env: python
    buildCommand: "poetry update && poetry install"
    startCommand: "poetry run gunicorn app:app"
    autoDeploy: false
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: circuitree-distributed
          type: redis
          property: connectionString
      - key: POETRY_VERSION
        value: "1.6.1"
      - key: PYTHON_VERSION
        value: "3.10.7"
  - type: web
    name: flower
    region: ohio
    plan: free
    env: python
    buildCommand: "poetry update && poetry install"
    startCommand: "cd oscillation && poetry run celery --app oscillation_parallel_celery.app flower --loglevel info "
    autoDeploy: false
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: circuitree-distributed
          property: connectionString
      - key: POETRY_VERSION
        value: "1.6.1"
      - key: PYTHON_VERSION
        value: "3.10.7"
  - type: redis
    name: circuitree-distributed
    region: ohio
    plan: pro # we choose a plan with persistence to ensure tasks are not lost upon restart
    maxmemoryPolicy: noeviction # recommended policy for queues
    ipAllowList: [] # only allow internal connections